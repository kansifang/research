// higis_1.0_min.js - http://www.higis.org/himap
var GeoPoint=function(a,b){this.x=a;this.y=b;this.project=null};GeoPoint.prototype.toScreenPoint=function(){this.project&&this.project.geoToScreen(this)};var ScreenPoint=function(a,b){this.x=a;this.y=b;this.project=null};ScreenPoint.prototype.toGeoPoint=function(){this.project&&this.project.screenToGeo(this)};
var Bounds=function(a,b,c,d){this.lonMin=a||0;this.latMax=b||0;this.lonMax=c||0;this.latMin=d||0;this.leftTop=new GeoPoint(this.lonMin,this.latMax);this.bottomRight=new GeoPoint(this.lonMax,this.latMin);this.width=this.lonMax-this.lonMin;this.height=this.latMax-this.latMin};Bounds.prototype.getCenter=function(){return new GeoPoint(this.lonMin+(this.lonMax-this.lonMin)/2,this.latMin+(this.latMax-this.latMin)/2)};
Bounds.prototype.containPoint=function(a){return a.x>=this.lonMin&&a.x<=this.lonMax&&a.y<=this.latMax&&a.y>=this.latMin};Bounds.prototype.unionBounds=function(a){lonmin=this.lonMin<a.lonMin?this.lonMin:a.lonMin;latmax=this.latMax>a.latMax?this.latMax:a.latMax;lonmax=this.lonMax>a.lonMax?this.lonMax:a.lonMax;latmin=this.latMin<a.latMin?this.latMin:a.latMin;return new Bounds(lonmin,latmax,lonmax,latmin)};
var Rect=function(a,b,c,d){this.x=a||0;this.y=b||0;this.width=c||0;this.height=d||0;this.leftTop=new ScreenPoint(a,b);this.bottomRight=new ScreenPoint(a+c,b+d)};Rect.prototype.getCenter=function(){return new ScreenPoint(this.x+this.width/2,this.y+this.height/2)};Rect.prototype.containPoint=function(a){return a.x>=this.leftTop.x&&a.x<=this.bottomRight.x&&a.y>=this.leftTop.y&&a.y<=this.bottomRight.y};
var layer=function(){this.projection=this.canvas=this.data=null;this.maxScale=this.minScale=-1;this.visible=!0;this.style={}};layer.prototype.endMove=function(){};layer.prototype.move=function(){};layer.prototype.prepareRender=function(){};layer.prototype.render=function(){};var Project=function(a,b,c){this.geoCenter=a;this.seeCenter=b;this.resolution=c};
Project.prototype.geoToScreen=function(a){screen_x=Math.round(this.seeCenter.x+(a.x-this.geoCenter.x)/this.resolution+0.5);screen_y=Math.round(this.seeCenter.y-(a.y-this.geoCenter.y)/this.resolution+0.5);return new ScreenPoint(screen_x,screen_y)};Project.prototype.screenToGeo=function(a){geo_x=this.geoCenter.x+(a.x-this.seeCenter.x)*this.resolution;geo_y=this.geoCenter.y-(a.y-this.seeCenter.y)*this.resolution;return new GeoPoint(geo_x,geo_y)};
var ResolutionCalc=function(a,b){geoCenter=a.getCenter();screenCenter=b.getCenter();RoH=a.height/b.height;RoW=a.width/b.width;return RoH>RoW?RoH:RoW},GeojsonLayer=function(a){this.data=a};GeojsonLayer.prototype=new layer;GeojsonLayer.prototype.endMove=function(){};GeojsonLayer.prototype.move=function(){};GeojsonLayer.prototype.prepareRender=function(){};
GeojsonLayer.prototype.parseGeoJSON=function(a,b,c){if(a&&b)switch(a.type){case "Point":this.drawPoint(a,b,c);break;case "MultiPoint":this.drawMultiPoint(a,b,c);break;case "LineString":this.drawLineString(a,b,c);break;case "MultiLineString":this.drawMultiLineString(a,b,c);break;case "Polygon":this.drawPolygon(a,b,c);break;case "MultiPolygon":this.drawMultiPolygon(a,b,c);break;case "GeometryCollection":this.drawGeometryCollection(a,b);break;case "Feature":this.drawFeature(a,b);break;case "FeatureCollection":this.drawFeatureCollection(a,
b)}};
GeojsonLayer.prototype.drawPoint=function(a,b,c){b.context.fillStyle=this.style.fillStyle||"red";b.context.strokeStyle=this.style.strokeStyle||"red";b.context.shadowColor="rgb(100,100,100)";b.context.shadowBlur=8;pointRadius=this.style.radius||4;b.context.shadowOffsetX=pointRadius/10;b.context.shadowOffsetY=pointRadius/10;tempP=new GeoPoint(parseFloat(a.coordinates[0]),parseFloat(a.coordinates[1]));screenP=b.projection.geoToScreen(tempP);if(b.screenRect.containPoint(screenP)&&(b.context.beginPath(),b.context.arc(screenP.x,
screenP.y,pointRadius,0*(Math.PI/180),360*(Math.PI/180),!1),b.context.fill(),b.context.closePath(),this.style.labelField&&(labelValue=c[this.style.labelField]))){var a=document.createElement("image"),d=document.createElement("div"),c=document.createElement("span");c.innerText=labelValue;a.src="circle6.png";d.setAttribute("style","position:absolute;left:"+(screenP.x-pointRadius)+"px;top:"+(screenP.y-pointRadius)+"px;width:"+2*pointRadius+"px;height:"+2*pointRadius+"px;");a.setAttribute("style",
"position:absolute;left:"+(screenP.x-pointRadius)+"px;top:"+(screenP.y-pointRadius)+"px;width:"+2*pointRadius+"px;height:"+2*pointRadius+"px;");d.appendChild(a);d.appendChild(c);a.onload=function(){b.divMarkLayer.appendChild(d)};this.style.labelMinScale&&b.scale<parseFloat(this.style.labelMinScale)&&(b.context.fillStyle=this.style.labelColor||"black",b.context.textBaseline="top",b.context.textAlign="center",b.context.font="6px \u5b8b\u4f53",b.context.fillText(labelValue,screenP.x,screenP.y+6))}};
GeojsonLayer.prototype.drawLineString=function(a,b,c){b.context.strokeStyle=this.style.strokeStyle||"#000000";b.context.lineWidth=this.style.lineWidth||2;b.context.lineCap="round";if(c&&this.style.theme&&"uniqueTheme"==this.style.theme.type&&(lineTheme=this.style.theme.values[c[this.style.theme.field]]))b.context.strokeStyle=lineTheme.strokeStyle||b.context.strokeStyle;b.context.beginPath();for(var d in a.coordinates)lon=a.coordinates[d][0],lat=a.coordinates[d][1],tempP=new GeoPoint(parseFloat(lon),
parseFloat(lat)),screenP=b.projection.geoToScreen(tempP),0==d?b.context.moveTo(screenP.x,screenP.y):b.context.lineTo(screenP.x,screenP.y);b.context.stroke();b.context.closePath()};
GeojsonLayer.prototype.drawPolygon=function(a,b){b.context.fillStyle="#C0630F";b.context.strokeStyle="#000000";b.context.lineWidth=0.5;b.context.lineCap="round";b.context.beginPath();for(var c in a.coordinates[0])lon=line.coordinates[c][0],lat=line.coordinates[c][1],tempP=new GeoPoint(parseFloat(lon),parseFloat(lat)),screenP=b.projection.geoToScreen(tempP),0==c?b.context.moveTo(screenP.x,screenP.y):b.context.lineTo(screenP.x,screenP.y);b.context.stroke();b.context.fill();b.context.closePath()};
GeojsonLayer.prototype.drawMultiPoint=function(a,b,c){for(var d in a.coordinates)this.drawPoint({type:"Point",coordinates:a.coordinates[d]},b,c)};GeojsonLayer.prototype.drawMultiLineString=function(a,b,c){for(var d in a.coordinates)this.drawLineString({type:"LineString",coordinates:a.coordinates[d]},b,c)};GeojsonLayer.prototype.drawMultiPolygon=function(a,b,c){for(var d in a.coordinates)this.drawPolygon({type:"Polygon",coordinates:a.coordinates[d]},b,c)};
GeojsonLayer.prototype.drawGeometryCollection=function(a,b){for(var c in a.geometries)this.parseGeoJSON(a.geometries[c],b,null)};GeojsonLayer.prototype.drawFeatureCollection=function(a,b){for(var c in a.features)this.drawFeature(a.features[c],b)};GeojsonLayer.prototype.drawFeature=function(a,b){this.parseGeoJSON(a.geometry,b,a.properties)};GeojsonLayer.prototype.getBounds=function(){};GeojsonLayer.prototype.render=function(a){a&&this.data&&this.parseGeoJSON(this.data,a)};var Debugger=function(){};
Debugger.log=function(a){try{console.log(a)}catch(b){}};
var HiMap=function(a){this.element=a;this.mouseIsDown=!1;this.mouseY=this.mouseX=-1;this.state="pan";this.layers=[];this.dy=this.dx=0;this.scale=1;this.zoomLevel=0;this.projection=this.geoRect=this.fullExtentBBox=this.currentBBox=null;if(a){this.screenRect=new Rect(0,0,a.width,a.height);var b=this;this.context=a.getContext("2d");this.trackLayer=a.cloneNode(!0);this.trackLayer.setAttribute("id","trackCanvas");this.trackLayer.setAttribute("style","position:absolute; left:"+a.offsetLeft+"px;top:"+a.offsetTop+
"px");this.element.parentNode.appendChild(this.trackLayer);this.trackContext=document.getElementById("trackCanvas").getContext("2d");this.divMarkLayer=document.createElement("div");this.divMarkLayer.setAttribute("style","position:absolute; left:"+a.offsetLeft+"px;top:"+a.offsetTop+"px;");this.divMarkLayer.setAttribute("id","markLayer");this.element.parentNode.appendChild(this.divMarkLayer);a=function(a){$(a).mousedown(function(a){a=a?a:window.event;b.mouseX=a.pageX-this.offsetLeft;b.mouseY=a.pageY-
this.offsetTop;b.mousedown()});$(a).mouseup(function(a){a=a?a:window.event;b.mouseX=a.pageX-this.offsetLeft;b.mouseY=a.pageY-this.offsetTop;b.mouseup()});$(a).mousemove(function(a){a=a?a:window.event;b.mouseX=a.pageX-this.offsetLeft;b.mouseY=a.pageY-this.offsetTop;b.mousemove()});a.addEventListener&&a.addEventListener("DOMMouseScroll",function(a){b.mousewheel(a.detail);a.stopPropagation();a.preventDefault()},!1);a.onmousewheel=function(a){a=a?a:window.event;event.returnValue=!1;b.mousewheel(a.wheelDelta)};
"createTouch"in document&&($(a).touchstart(function(a){a.stopPropagation();a.preventDefault();b.mouseX=a.touches[0].clientX-this.offsetLeft;b.mouseY=a.touches[0].clientY-this.offsetTop;b.mousedown()}),$(a).touchmove(function(a){a.stopPropagation();a.preventDefault();b.mouseX=a.touches[0].clientX-this.offsetLeft;b.mouseY=a.touches[0].clientY-this.offsetTop;b.mousemove()}),$(a).touchend(function(a){a.stopPropagation();a.preventDefault();b.mouseX=a.touches[0].clientX-this.offsetLeft;b.mouseY=a.touches[0].clientY-
this.offsetTop;b.mouseup()}))};a(this.element);a(this.trackLayer)}};HiMap.prototype.mousedown=function(){this.landingX=this.mouseX;this.landingY=this.mouseY;this.lastMouseDownPoint=new GeoPoint(this.landingX,this.landingY);this.mouseIsDown=!0};HiMap.prototype.mousewheel=function(a){Debugger.log(a);0<a?this.zoomIn():this.zoomOut()};
HiMap.prototype.mousemove=function(){newMousePoint=new ScreenPoint(this.mouseX,this.mouseY);newMousePoint_lonlat=this.projection.screenToGeo(newMousePoint);if(this.mouseIsDown&&this.lastMouseDownPoint)if(lastMouseDownPoint_lonlat=this.projection.screenToGeo(this.lastMouseDownPoint),"pan"==this.state)pan_x=newMousePoint_lonlat.x-lastMouseDownPoint_lonlat.x,pan_y=newMousePoint_lonlat.y-lastMouseDownPoint_lonlat.y,this.currentBBox[0]-=pan_x,this.currentBBox[1]-=pan_y,this.currentBBox[2]-=pan_x,this.currentBBox[3]-=
pan_y,this.render(),this.lastMouseDownPoint=newMousePoint;else if("zoomin"==this.state||"zoomout"==this.state)width=this.mouseX-this.lastMouseDownPoint.x,height=this.mouseY-this.lastMouseDownPoint.y,rect=[0<width?this.lastMouseDownPoint.x:this.mouseX,0<height?this.lastMouseDownPoint.y:this.mouseY,Math.abs(width),Math.abs(height)],this.trackFeatures=[],this.trackFeatures.push(rect),this.drawTrack()};
HiMap.prototype.drawTrack=function(){this.trackContext.clearRect(0,0,this.trackLayer.width,this.trackLayer.height);this.trackContext.strokeStyle="#DD0006";this.trackContext.lineWidth=2;this.trackContext.lineCap="round";for(var a in this.trackFeatures)this.trackContext.strokeRect(this.trackFeatures[a][0],this.trackFeatures[a][1],this.trackFeatures[a][2],this.trackFeatures[a][3])};
HiMap.prototype.mouseup=function(){this.mouseIsDown=!1;if("zoomin"==this.state||"zoomout"==this.state)this.trackContext.clearRect(0,0,this.trackLayer.width,this.trackLayer.height),newMousePoint=new ScreenPoint(this.mouseX,this.mouseY),newMousePoint_lonlat=this.projection.screenToGeo(newMousePoint),lastMouseDownPoint_lonlat=this.projection.screenToGeo(this.lastMouseDownPoint),"zoomin"==this.state?(this.currentBBox[0]=lastMouseDownPoint_lonlat.x<newMousePoint_lonlat.x?lastMouseDownPoint_lonlat.x:newMousePoint_lonlat.x,
this.currentBBox[1]=lastMouseDownPoint_lonlat.y>newMousePoint_lonlat.y?lastMouseDownPoint_lonlat.y:newMousePoint_lonlat.y,this.currentBBox[2]=lastMouseDownPoint_lonlat.x<newMousePoint_lonlat.x?newMousePoint_lonlat.x:lastMouseDownPoint_lonlat.x,this.currentBBox[3]=lastMouseDownPoint_lonlat.y>newMousePoint_lonlat.y?newMousePoint_lonlat.y:lastMouseDownPoint_lonlat.y,this.render()):"zoomout"==this.state&&(lonmin=this.currentBBox[0],lonmax=this.currentBBox[2],latmin=this.currentBBox[3],latmax=this.currentBBox[1],
expandWidth=((lonmax-lonmin)*(lonmax-lonmin)/Math.abs(newMousePoint_lonlat.x-lastMouseDownPoint_lonlat.x)-(lonmax-lonmin))/2,expandHeight=((latmax-latmin)*(latmax-latmin)/Math.abs(newMousePoint_lonlat.y-lastMouseDownPoint_lonlat.y)-(latmax-latmin))/2,this.currentBBox[0]=lonmin-expandWidth,this.currentBBox[2]=lonmax+expandWidth,this.currentBBox[3]=latmin-expandHeight,this.currentBBox[1]=latmax+expandHeight,this.render());this.state="pan";this.lastMouseDownPoint=null};HiMap.prototype.addLayer=function(a){this.layers.push(a)};
HiMap.prototype.notify=function(a){for(var b=0;b<this.layers.length;b++){var c=this.layers[b];c[a]&&c[a].call(c,this)}};HiMap.prototype.currentScale=function(){this.currentGeoRect();this.scale=Math.round(1.0674707733290592E7*ResolutionCalc(this.geoRect,this.screenRect)/0.0254000508)};HiMap.prototype.currentGeoRect=function(){return this.geoRect=new Bounds(this.currentBBox[0],this.currentBBox[1],this.currentBBox[2],this.currentBBox[3])};
HiMap.prototype.currentZoomLevel=function(){MERCATOR_RADIUS=8.544565944705395E7;this.zoomLevel=21-Math.round(Math.log(this.geoRect.width*MERCATOR_RADIUS*Math.PI/(180*this.screenRect.width)))};HiMap.prototype.fullView=function(){for(var a in this.fullExtentBBox)this.currentBBox[a]=this.fullExtentBBox[a];this.render()};HiMap.prototype.reCalcScaleZoomLevel=function(){this.currentScale();this.currentZoomLevel()};HiMap.prototype.render=function(){this.prepareRender();this.notify("render")};
HiMap.prototype.zoomInWithRect=function(){this.state="zoomin"};HiMap.prototype.zoomOutWithRect=function(){this.state="zoomout"};
HiMap.prototype.zoomIn=function(){zoomRadio=0.2;lonmin=this.currentBBox[0];lonmax=this.currentBBox[2];latmin=this.currentBBox[3];latmax=this.currentBBox[1];leftop=[lonmin,latmax];rightbottom=[lonmax,latmin];centerPoint=[lonmin+(lonmax-lonmin)/2,latmin+(latmax-latmin)/2];this.currentBBox[0]=lonmin+(centerPoint[0]-lonmin)*zoomRadio;this.currentBBox[1]=latmax-(latmax-centerPoint[1])*zoomRadio;this.currentBBox[2]=lonmax-(lonmax-centerPoint[0])*zoomRadio;this.currentBBox[3]=latmin+(centerPoint[1]-latmin)*
zoomRadio;this.render()};
HiMap.prototype.zoomOut=function(){zoomRadio=0.2;lonmin=this.currentBBox[0];lonmax=this.currentBBox[2];latmin=this.currentBBox[3];latmax=this.currentBBox[1];leftop=[lonmin,latmax];rightbottom=[lonmax,latmin];centerPoint=[lonmin+(lonmax-lonmin)/2,latmin+(latmax-latmin)/2];this.currentBBox[0]=lonmin-(centerPoint[0]-lonmin)*zoomRadio;this.currentBBox[1]=latmax+(latmax-centerPoint[1])*zoomRadio;this.currentBBox[2]=lonmax+(lonmax-centerPoint[0])*zoomRadio;this.currentBBox[3]=latmin-(centerPoint[1]-latmin)*
zoomRadio;this.render()};HiMap.prototype.pan=function(){this.state="pan"};HiMap.prototype.prepareRender=function(){this.reCalcScaleZoomLevel();this.context.fillStyle="#B2BDC4";this.context.fillRect(0,0,this.element.width,this.element.height);this.geoRect=this.currentGeoRect();this.projection=new Project(this.geoRect.getCenter(),this.screenRect.getCenter(),ResolutionCalc(this.geoRect,this.screenRect));if(markLayer=document.getElementById("markLayer"))markLayer.innerHTML=""};HiMap.prototype.start=function(){this.fullView()};
